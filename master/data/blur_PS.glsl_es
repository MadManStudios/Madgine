#version 300 es
#define readonly 
#define buffer uniform
#define std430 std140
precision mediump float;
precision highp int;

struct BlurData
{
    ivec2 _textureSize;
    uint horizontal;
};

const float _46[5] = float[10](0.227026998996734619140625, 0.19459460675716400146484375, 0.121621601283550262451171875, 0.054053999483585357666015625, 0.01621600054204463958740234375);

layout(std140) uniform buffer0
{
    BlurData data;
} Data;

uniform highp sampler2D texture4;

in highp vec2 out_var_TEXCOORD0;
layout(location = 0) out highp vec4 out_var_SV_TARGET;

void main()
{
    highp vec2 _52 = vec2(1.0) / vec2(Data.data._textureSize);
    highp vec4 _56 = texture(texture4, out_var_TEXCOORD0);
    highp vec3 _60 = _56.xyz * _46[0];
    highp vec3 _119;
    if (Data.data.horizontal != 0u)
    {
        highp vec3 _68;
        _68 = _60;
        for (int _71 = 1; _71 < 5; )
        {
            highp vec2 _78 = vec2(_52.x * float(_71), 0.0);
            _68 = (_68 + (texture(texture4, out_var_TEXCOORD0 + _78).xyz * _46[_71])) + (texture(texture4, out_var_TEXCOORD0 - _78).xyz * _46[_71]);
            _71++;
            continue;
        }
        _119 = _68;
    }
    else
    {
        highp vec3 _94;
        _94 = _60;
        for (int _97 = 1; _97 < 5; )
        {
            highp vec2 _104 = vec2(0.0, _52.y * float(_97));
            _94 = (_94 + (texture(texture4, out_var_TEXCOORD0 + _104).xyz * _46[_97])) + (texture(texture4, out_var_TEXCOORD0 - _104).xyz * _46[_97]);
            _97++;
            continue;
        }
        _119 = _94;
    }
    out_var_SV_TARGET = vec4(_119, 1.0);
}


