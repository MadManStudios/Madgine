#version 300 es
#define readonly 
#define buffer uniform
#define std430 std140
precision mediump float;
precision highp int;

struct Im3DPerObject
{
    highp mat4 mv;
    uint hasTexture;
    uint hasDistanceField;
};

layout(std140) uniform buffer2
{
    layout(row_major) Im3DPerObject object;
} PerObject;

uniform highp sampler2D texture4;

in highp vec4 out_var_COLOR;
in highp vec2 out_var_TEXCOORD0;
layout(location = 0) out highp vec4 out_var_SV_TARGET;

void main()
{
    highp vec4 _76;
    if (PerObject.object.hasTexture != 0u)
    {
        highp vec4 _75;
        if (PerObject.object.hasDistanceField != 0u)
        {
            highp vec4 _56 = texture(texture4, out_var_TEXCOORD0);
            highp float _57 = _56.x;
            highp float _58 = _56.y;
            _75 = mix(vec4(0.0), out_var_COLOR, vec4(clamp(((max(min(_57, _58), min(max(_57, _58), _56.z)) - 0.5) * 4.0) + 0.5, 0.0, 1.0)));
        }
        else
        {
            _75 = out_var_COLOR * texture(texture4, out_var_TEXCOORD0);
        }
        _76 = _75;
    }
    else
    {
        _76 = out_var_COLOR;
    }
    out_var_SV_TARGET = _76;
}


