#version 300 es
#define readonly 
#define buffer uniform
#define std430 std140

struct Im3DPerApplication
{
    mat4 p;
};

struct Im3DPerObject
{
    mat4 mv;
    uint hasTexture;
    uint hasDistanceField;
};

layout(std140) uniform buffer0
{
    layout(row_major) Im3DPerApplication app;
} PerApplication;

layout(std140) uniform buffer2
{
    layout(row_major) Im3DPerObject object;
} PerObject;

layout(location = 0) in vec3 in_var_POSITION0;
layout(location = 1) in float in_var_POSITION1;
layout(location = 2) in vec2 in_var_POSITION2;
layout(location = 4) in vec4 in_var_COLOR;
layout(location = 5) in vec2 in_var_TEXCOORD;
out vec4 out_var_COLOR;
out vec2 out_var_TEXCOORD0;

mat4 spvWorkaroundRowMajor(mat4 wrap) { return wrap; }

void main()
{
    vec4 _56 = ((vec4(in_var_POSITION0, in_var_POSITION1) * spvWorkaroundRowMajor(PerObject.object.mv)) + vec4(in_var_POSITION2, 0.0, 0.0)) * spvWorkaroundRowMajor(PerApplication.app.p);
    _56.z = (_56.z + _56.w) * 0.5;
    gl_Position = _56;
    out_var_COLOR = in_var_COLOR;
    out_var_TEXCOORD0 = in_var_TEXCOORD;
}


