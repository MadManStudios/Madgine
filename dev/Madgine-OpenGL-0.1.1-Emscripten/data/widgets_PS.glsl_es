#version 300 es
#define readonly 
#define buffer uniform
#define std430 std140
precision mediump float;
precision highp int;

struct WidgetsPerObject
{
    uint hasDistanceField;
    uint hasTexture;
};

layout(std140) uniform buffer2
{
    WidgetsPerObject object;
} PerObject;

uniform highp sampler2D texture4;

in highp vec4 out_var_COLOR;
in highp vec2 out_var_TEXCOORD;
layout(location = 0) out highp vec4 out_var_SV_TARGET;

void main()
{
    highp vec4 _76;
    if (PerObject.object.hasDistanceField != 0u)
    {
        highp vec4 _48 = texture(texture4, out_var_TEXCOORD);
        highp float _49 = _48.x;
        highp float _50 = _48.y;
        highp float _56 = max(min(_49, _50), min(max(_49, _50), _48.z)) - 0.5;
        highp float _57 = fwidth(_56);
        highp float _60 = clamp((_56 / _57) + 0.5, 0.0, 1.0);
        if (_60 == 0.0)
        {
            discard;
        }
        _76 = vec4(_60);
    }
    else
    {
        highp vec4 _75;
        if (PerObject.object.hasTexture != 0u)
        {
            _75 = texture(texture4, out_var_TEXCOORD);
        }
        else
        {
            _75 = vec4(1.0);
        }
        _76 = _75;
    }
    out_var_SV_TARGET = out_var_COLOR * _76;
}


